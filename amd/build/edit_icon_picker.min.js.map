{"version":3,"sources":["../src/edit_icon_picker.js"],"names":["define","$","Templates","ajax","str","Notification","config","modalStored","stringStore","pickAnIcon","iconSet","recentPhotoSet","getAndStoreIconSet","courseId","callback","photosPromises","call","methodname","args","courseid","done","response","photos","JSON","parse","icons","Object","keys","forEach","icon","push","filename","displayname","length","require","log","error","debug","photoNames","map","photo","find","each","index","ph","indexOf","attr","fadeOut","status","fail","getPhotoTileButtonUrl","sectionId","wwwroot","setIcon","sectionNum","pageType","imageType","sourcecontextid","sourceitemid","selectedIcon","changeUiTilePhoto","jqueryObjToChange","imageUrl","templateToRender","templateParams","tileicon","tileid","secid","isediting","phototileurl","phototileediturl","iamgetype","closest","addClass","setTimeout","Error","divToAnimate","animate","opacity","render","html","val","ajaxIconPickArgs","image","sectionid","imagetype","setIconDbPromises","imageurl","selectBox","renderPix","newIcon","get_strings","key","component","strings","alert","launchIconPicker","section","allowPhotoTiles","documentationurl","populatePhotoLibrary","photosHTML","modalRoot","modal","photoLibrary","doLast","click","e","clickedImage","currentTarget","hide","renderModal","icon_picker_icons","photosallowed","iconsHTML","modalFact","create","type","types","DEFAULT","title","body","setLarge","show","root","on","searchText","value","toLowerCase","filter","tooltip","err","url","icon_picker_photos","off","init","document","ready","stringKey","get_string","pageContent","preventDefault","clickedIcon"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint space-before-function-paren: 0 */\n\n/**\n * Javascript Module to handle the icon picker dialogue for format_tiles\n * which the editing user uses to select an icon for a tile or the default icon\n * for all tiles in the course\n *\n * @module      icon_picker\n * @package     course/format\n * @subpackage  multitopic\n * @copyright   2018 David Watson {@link http://evolutioncode.uk}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since       Moodle 3.3\n */\n\ndefine([\"jquery\", \"core/templates\", \"core/ajax\", \"core/str\", \"core/notification\", \"core/config\"],\n    function ($, Templates, ajax, str, Notification, config) {\n        \"use strict\";\n\n        var modalStored;\n        var stringStore = {pickAnIcon: ''};\n        var iconSet = [];\n        var recentPhotoSet = [];\n\n        /**\n         * Get the available icon set and photo set and store them for later use.\n         * @param {number}courseId\n         * @param {function|undefined} callback what to do after.\n         */\n        var getAndStoreIconSet = function(courseId, callback) {\n            var photosPromises = ajax.call([{\n                methodname: \"format_multitopic_get_icon_set\",\n                args: {courseid: courseId}\n            }]);\n            photosPromises[0].done(function (response) {\n                if (response.photos) {\n                    recentPhotoSet = JSON.parse(response.photos);\n                }\n                var icons = JSON.parse(response.icons);\n                Object.keys(icons).forEach(function(icon) {\n                    iconSet.push({filename: icon, displayname: icons[icon]});\n                });\n                if (iconSet.length <= 0) {\n                    require([\"core/log\"], function(log) {\n                        log.error(\"Error empty icon set\");\n                        log.debug(response);\n                    });\n                }\n                if (typeof callback === \"function\") {\n                    callback();\n                }\n\n                // Check if there are any photos in the library that need deleting.\n                var photoNames = recentPhotoSet.map(function(photo) {\n                    return photo.filename;\n                });\n                $(\"#iconpickerphotos\").find(\".photo\").each(function (index, ph) {\n                    ph = $(ph);\n                    if (photoNames.indexOf(ph.attr(\"data-filename\")) === -1) {\n                        ph.fadeOut(500);\n                    }\n                });\n                if (response.status !== true) {\n                    require([\"core/log\"], function(log) {\n                        log.error(\"Non true status response when getting icon set\");\n                        log.debug(response);\n                    });\n                }\n            });\n            photosPromises[0].fail(function (response) {\n                require([\"core/log\"], function(log) {\n                    log.error(\"Fail when getting icon set\");\n                    log.debug(response);\n                });\n            });\n        };\n\n        /**\n         * Get the URL for a link for a photo tile button (to access the edit form).\n         * @param {number} courseId\n         * @param {number} sectionId\n         * @returns {string}\n         */\n        var getPhotoTileButtonUrl = function(courseId, sectionId) {\n            return config.wwwroot + '/course/format/multitopic/editimage.php?courseid=' + courseId + '&sectionid=' + sectionId;\n        };\n\n        /**\n         * Set the selected icon in the database via AJAX to the web service.\n         * When successful, then change the icon being displayed to the current editing user.\n         * If we are on an edit form, also select the selected icon in the hidden HTML selecftBox.\n         * The select box\n         * @param {number} sectionId\n         * @param {number} sectionNum\n         * @param {string} icon\n         * @param {string} displayname\n         * @param {string} pageType\n         * @param {number} courseId\n         * @param {string} imageType\n         * @param {number|undefined} sourcecontextid\n         * @param {number|undefined} sourceitemid\n         */\n        var setIcon = function (\n            sectionId, sectionNum, icon, displayname, pageType, courseId, imageType, sourcecontextid, sourceitemid\n        ) {\n            var selectedIcon = $(\"#selectedicon\");\n            var changeUiTilePhoto = function (jqueryObjToChange, imageUrl, imageType) {\n                var templateToRender = '';\n                var templateParams = {\n                    tileicon: icon,\n                    tileid: sectionNum,\n                    secid: sectionId,\n                    isediting: 1\n                };\n                switch (imageType) {\n                    case 'tileicon':\n                        templateToRender = 'tileicon';\n                        break;\n                    case 'tilephoto':\n                        templateToRender = 'tilebarphoto';\n                        templateParams.phototileurl = imageUrl;\n                        templateParams.phototileediturl = getPhotoTileButtonUrl(courseId, sectionId);\n                        templateParams.iamgetype = imageType;\n                        jqueryObjToChange.closest(\".tileiconcontainer\").addClass(\"hasphoto\");\n                        // Refresh the photos in library as may not are still be available.\n                        setTimeout(function () {\n                            getAndStoreIconSet(courseId);\n                        }, 3000);\n                        break;\n                    case 'draftfile':\n                        templateToRender = 'tilebarphoto';\n                        templateParams.phototileurl = imageUrl;\n                        templateParams.phototileediturl = getPhotoTileButtonUrl(courseId, sectionId);\n                        templateParams.iamgetype = imageType;\n                        break;\n                    default:\n                        throw new Error(\"Invalid image type \" + imageType);\n                }\n                var divToAnimate = pageType === \"course-view-multitopic\" ? jqueryObjToChange : selectedIcon;\n                divToAnimate.animate({opacity: 0}, 500, function () {\n                    Templates.render(\"format_multitopic/\" + templateToRender, templateParams)\n                        .done(function (html) {\n                            divToAnimate.html(html)\n                                .animate({opacity: 1}, 500);\n                        });\n                });\n                if (pageType === \"course-editsection\" && imageType === \"tilephoto\") {\n                        $('input[name=tilephoto]').val(icon);\n                }\n            };\n            var ajaxIconPickArgs = {\n                image: icon,\n                courseid: courseId,\n                sectionid: sectionId,\n                imagetype: imageType,\n                sourcecontextid: sourcecontextid === undefined ? 0 : sourcecontextid,\n                sourceitemid: sourceitemid === undefined ? 0 : sourceitemid,\n                // Sectionid will be zero if relates to whole course not just one sec.\n            };\n            var setIconDbPromises = ajax.call([{\n                methodname: \"format_multitopic_set_image\",\n                args: ajaxIconPickArgs\n            }]);\n            setIconDbPromises[0].done(function (response) {\n                if (response.status === true) {\n                    if (pageType === \"course-view-multitopic\") {\n                        // We are changing an icon for a specific section from within the course.\n                        // We are doing this by clicking an existing icon.\n                        changeUiTilePhoto($(\"#tileicon_\" + sectionNum), response.imageurl, imageType);\n                    } else if (pageType === \"course-edit\" || pageType === \"course-editsection\") {\n                        // We are changing the icon using a drop down menu not the icon picker modal.\n                        // Either for the whole course or for one section.\n                        // Select new icon in drop down.\n                        var selectBox = $(\"#id_defaulttileicon\"); // Valid if page type is course-edit.\n                        if (pageType === \"course-editsection\") {\n                            selectBox = $(\"#id_tileicon\");\n                        }\n                        selectBox.val(icon);\n                        // Then change the image shown next to it.\n                        if (imageType === \"tileicon\") {\n                            Templates.renderPix(\"tileicon/\" + icon, \"format_multitopic\", displayname)\n                                .done(function (newIcon) {\n                                    selectedIcon.html(newIcon);\n                                    if (pageType === \"course-editsection\") {\n                                        str.get_strings([\n                                            {key: \"tip\", component: \"format_multitopic\"},\n                                            {key: \"tileselecttip\", component: \"format_multitopic\"}\n                                        ]).done(function (strings) {\n                                            Notification.alert(\n                                                strings[0],\n                                                strings[1]\n                                            );\n                                        });\n                                    }\n                                });\n                            if (pageType === \"course-editsection\") {\n                                $('input[name=tilephoto]').val(\"\");\n                            }\n                        } else if (imageType === \"tilephoto\") {\n                            changeUiTilePhoto($(\"#tileicon_\" + sectionNum), response.imageurl, imageType);\n                        }\n                    }\n\n                }\n            }).fail(function(response) {\n                require([\"core/log\"], function(log) {\n                    log.error(\"Fail setting icon\");\n                    log.debug(response);\n                });\n            });\n        };\n\n        /**\n         * When user clicks to launch an icon picker modal, set which section it relates to\n         * so that we know which section the icon clicked is for.  This is so that only one modal needs\n         * to be rendered (with all the icons in it) - we can use it to assign icons to any section\n         * @param {string} pageType\n         * @param {number} courseId\n         * @param {int} sectionId\n         * @param {int} section\n         * @param {int} allowPhotoTiles whether to render a button for the photo tile form - true or false).\n         * @param {string} documentationurl\n         */\n        var launchIconPicker = function (pageType, courseId, sectionId, section, allowPhotoTiles, documentationurl) {\n            alert(\"launchIconPicker started\");\n            // Launch icon picker can be a tile icon (if editing course) or a button (if on a form).\n            var populatePhotoLibrary = function(photosHTML, modalRoot, modal) {\n                var photoLibrary = $(\"#iconpickerphotos\");\n                photoLibrary.html(photosHTML);\n\n                // Load the images that are not too large immediately.\n                // (User draft files may be large so leave them to load last.\n                var largeFileThreshold = 200000; // Bytes.\n                var doLast = [];\n                photoLibrary.find(\"img\").each(function (index, image) {\n                    image = $(image);\n                    if (image.attr(\"data-filesize\") < largeFileThreshold) {\n                        setTimeout(function () {\n                            image.attr(\"src\", image.attr(\"data-url\"));\n                        }, index * 20);\n                    } else {\n                        doLast.push(image);\n                    }\n\n                    image.click(function (e) {\n                        var clickedImage = $(e.currentTarget);\n                        setIcon(\n                            modalRoot.attr(\"data-sectionid\"),\n                            modalRoot.attr(\"data-section\"),\n                            clickedImage.attr(\"data-filename\"),\n                            clickedImage.attr(\"data-filename\"),\n                            pageType,\n                            courseId,\n                            clickedImage.attr(\"data-imagetype\"),\n                            clickedImage.attr(\"data-contextid\"), // For existing photos - sourcecontextid.\n                            clickedImage.attr(\"data-itemid\") // For existing photos - sourceitemid.\n                        );\n                        modal.hide();\n                    });\n                });\n                setTimeout(function () {\n                    doLast.forEach(function (image) {\n                        image.attr(\"src\", image.attr(\"data-url\"));\n                    });\n                }, 1000);\n            };\n\n            if (typeof modalStored !== \"object\") {\n                // We only have one modal per page which we recycle.  We dont have it yet so create it.\n\n                var renderModal = function() {\n                    Templates.render(\"format_multitopic/icon_picker_modal_body\", {\n                        /* eslint-disable-next-line camelcase */\n                        icon_picker_icons: iconSet,\n                        photosallowed: allowPhotoTiles,\n                        wwwroot: config.wwwroot,\n                        documentationurl: documentationurl\n                    }).done(function (iconsHTML) {\n                        require([\"core/modal_factory\"], function (modalFact) {\n                            modalFact.create({\n                                type: modalFact.types.DEFAULT,\n                                title: stringStore.pickAnIcon,\n                                body: iconsHTML\n                            }).done(function (modal) {\n                                modalStored = modal;\n                                modal.setLarge();\n                                modal.show();\n                                var modalRoot = $(modal.root);\n                                modalRoot.attr(\"id\", \"icon_picker_modal\");\n                                modalRoot.attr(\"data-sectionid\", sectionId);\n                                modalRoot.attr(\"data-section\", section);\n                                modalRoot.addClass(\"icon_picker_modal\");\n                                modalRoot.on(\"click\", \".pickericon\", function (e) {\n                                    var newIcon = $(e.currentTarget);\n                                    setIcon(\n                                        sectionId,\n                                        section,\n                                        newIcon.attr(\"data-icon\"),\n                                        newIcon.attr(\"title\"),\n                                        pageType,\n                                        courseId,\n                                        'tileicon',\n                                        newIcon.attr(\"data-contextid\"), // For existing photos - sourcecontextid.\n                                        newIcon.attr(\"data-itemid\") // For existing photos - sourcetemid.\n                                    );\n                                    modal.hide();\n                                });\n                                // Icon search box handling.\n                                modalRoot.on(\"input\", \"input.iconsearch\", function (e) {\n                                    var searchText = e.currentTarget.value.toLowerCase();\n                                    modalRoot.find(\".pickericon\").show();\n                                    if (searchText.length >= 3) {\n                                        modalRoot.find(\".pickericon\").filter(function (index, icon) {\n                                            // Show all icons then hide icons which do not match the search term.\n                                            return $(icon).attr('data-original-title').toLowerCase().indexOf(searchText) < 0;\n                                        }).hide();\n                                    }\n                                });\n                                try {\n                                    $(\".pickericon\").tooltip();\n                                } catch (err) {\n                                    require([\"core/log\"], function (log) {\n                                        log.debug(err);\n                                    });\n                                }\n                                if (allowPhotoTiles) {\n                                    // Set the URL for the photo tile button if used (done dynamically as contains section id).\n                                    var url = getPhotoTileButtonUrl(courseId, sectionId);\n                                    modalRoot.find('#phototilebtn')\n                                        .attr('href', url);\n                                    // Now that we have modal, if photo library tab is clicked we need to lazy load the photos.\n                                    $(\"#launch-photo-library\").click(function () {\n                                        if (recentPhotoSet.length !== 0) {\n                                            Templates.render(\"format_multitopic/icon_picker_photos\", {\n                                                /* eslint-disable-next-line camelcase */\n                                                icon_picker_photos: recentPhotoSet,\n                                                wwwroot: config.wwwroot\n                                            }).done(function (photosHTML) {\n                                                populatePhotoLibrary(photosHTML, modalRoot, modal);\n                                            });\n                                        }\n                                    });\n                                }\n                            });\n                        });\n                    });\n                };\n                if (iconSet.length <= 0) {\n                    getAndStoreIconSet(courseId, renderModal);\n                } else {\n                    renderModal();\n                }\n            } else {\n                // We already have the modal so recycle it instead of re-rendering.\n                modalStored.root.attr(\"data-sectionid\", sectionId);\n                modalStored.root.attr(\"data-section\", section);\n                modalStored.root.off(\"click\");\n                modalStored.root.on(\"click\", \".pickericon\", function (e) {\n                    var newIcon = $(e.currentTarget);\n                    setIcon(\n                        sectionId,\n                        section,\n                        newIcon.attr(\"data-icon\"),\n                        newIcon.attr(\"title\"),\n                        pageType,\n                        courseId,\n                        newIcon.attr(\"data-imagetype\"),\n                        newIcon.attr(\"data-contextid\"), // For existing photos - sourcecontextid.\n                        newIcon.attr(\"data-itemid\") // For existing photos - sourcetemid.\n                    );\n                    modalStored.hide();\n                });\n                if (allowPhotoTiles) {\n                    // Set the URL for the photo tile button if used (done dynamically as contains section id).\n                    var url = getPhotoTileButtonUrl(courseId, sectionId);\n                    modalStored.root.find('#phototilebtn')\n                        .attr('href', url);\n                }\n                modalStored.show();\n            }\n        };\n\n        return {\n            init: function (courseId, pageType, allowPhotoTiles, documentationurl) {\n                $(document).ready(function () {\n                    var stringKey = allowPhotoTiles ? \"picknewiconphoto\" : \"picknewicon\";\n                    str.get_string(stringKey, \"format_multitopic\").done(function (pickAnIcon) {\n                        stringStore.pickAnIcon = pickAnIcon;\n                    });\n                    // Get the core icon set now so that we don't have to wait later.\n                    getAndStoreIconSet(courseId);\n\n                    var pageContent = $(\"#page-content\");\n                    if (pageContent.length === 0) {\n                        // Some themes e.g. RemUI do not have a #page-content div, so use #region-main.\n                        pageContent = $(\"#region-main\");\n                    }\n                    //alert(\"Adding event handler.\");\n                    pageContent.on(\"click\", \".launchiconpicker\", function (e) {\n                        e.preventDefault();\n                        //alert(\"Event handler triggered.\");\n                        var clickedIcon = $(e.currentTarget);\n                        launchIconPicker(\n                            pageType,\n                            courseId,\n                            clickedIcon.attr('data-sectionid'),\n                            clickedIcon.attr('data-section'),\n                            allowPhotoTiles,\n                            documentationurl\n                        );\n                    });\n                });\n            }\n        };\n    }\n);"],"file":"edit_icon_picker.min.js"}