define("format_multitopic/courseformat/courseeditor/mutations",["exports","core_courseformat/local/courseeditor/mutations"],(function(_exports,_mutations){var obj;
/**
   * Default mutation manager
   *
   * @module     format_multitopic/courseformat/courseeditor/mutations
   * @class      format_multitopic/courseformat/courseeditor/mutations
   * @copyright  2022 James Calder and Otago Polytechnic
   * @copyright  based on work by 2021 Ferran Recio <ferran@moodle.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_mutations=(obj=_mutations)&&obj.__esModule?obj:{default:obj};class _default extends _mutations.default{async fmtSectionMove(stateManager,origin,targetSection){if(!targetSection||!targetSection.id)throw new Error("Mutation sectionMove requires targetSectionId");const course=stateManager.get("course"),state=stateManager.state,originList=[origin.id];let originChild=origin;for(;course.sectionlist.length>originChild.number+1&&state.section.get(course.sectionlist[originChild.number+1]).levelsan>origin.levelsan;)originChild=state.section.get(course.sectionlist[originChild.number+1]),originList.push(originChild.id);this.sectionLock(stateManager,originList,!0);const updates=await this._callEditWebservice("fmt_section_move",course.id,originList,targetSection.id);stateManager.processUpdates(updates),this.sectionLock(stateManager,originList,!1)}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=mutations.min.js.map