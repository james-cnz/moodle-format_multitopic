{"version":3,"file":"mutations.min.js","sources":["../../../src/courseformat/courseeditor/mutations.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// import MutationsBase from 'core_courseformat/local/courseeditor/mutations';\n\n/**\n * Default mutation manager\n *\n * @module     format_multitopic/courseformat/courseeditor/mutations\n * @class      format_multitopic/courseformat/courseeditor/mutations\n * @copyright  2022 James Calder and Otago Polytechnic\n * @copyright  based on work by 2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class /*extends MutationsBase*/ {\n\n    /**\n     * Move course modules to specific course location.\n     *\n     * @param {StateManager} stateManager the current state manager\n     * @param {object} origin the section to move\n     * @param {object} targetSection the target section\n     */\n     async fmtSectionMove(stateManager, origin, targetSection) {\n        if (!targetSection || !targetSection.id) {\n            throw new Error(`Mutation sectionMove requires targetSectionId`);\n        }\n        const course = stateManager.get('course');\n        const state = stateManager.state;\n        const originList = [origin.id];\n        let originChild = origin;\n        while (course.sectionlist.length > originChild.number + 1\n                && state.section.get(course.sectionlist[originChild.number + 1]).levelsan > origin.levelsan) {\n            originChild = state.section.get(course.sectionlist[originChild.number + 1]);\n            originList.push(originChild.id);\n        }\n        this.sectionLock(stateManager, originList, true);\n        const updates = await this._callEditWebservice('fmt_section_move', course.id, originList, targetSection.id);\n        stateManager.processUpdates(updates);\n        this.sectionLock(stateManager, originList, false);\n    }\n\n}"],"names":["stateManager","origin","targetSection","id","Error","course","get","state","originList","originChild","sectionlist","length","number","section","levelsan","push","sectionLock","updates","this","_callEditWebservice","processUpdates"],"mappings":";;;;;;;;;;2BAmC0BA,aAAcC,OAAQC,mBACnCA,gBAAkBA,cAAcC,SAC3B,IAAIC,6DAERC,OAASL,aAAaM,IAAI,UAC1BC,MAAQP,aAAaO,MACrBC,WAAa,CAACP,OAAOE,QACvBM,YAAcR,YACXI,OAAOK,YAAYC,OAASF,YAAYG,OAAS,GAC7CL,MAAMM,QAAQP,IAAID,OAAOK,YAAYD,YAAYG,OAAS,IAAIE,SAAWb,OAAOa,UACvFL,YAAcF,MAAMM,QAAQP,IAAID,OAAOK,YAAYD,YAAYG,OAAS,IACxEJ,WAAWO,KAAKN,YAAYN,SAE3Ba,YAAYhB,aAAcQ,YAAY,SACrCS,cAAgBC,KAAKC,oBAAoB,mBAAoBd,OAAOF,GAAIK,WAAYN,cAAcC,IACxGH,aAAaoB,eAAeH,cACvBD,YAAYhB,aAAcQ,YAAY"}