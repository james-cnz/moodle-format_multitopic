{"version":3,"file":"section.min.js","sources":["../../../src/courseformat/courseindex/section.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index section component.\n *\n * This component is used to control specific course section interactions like drag and drop.\n *\n * @module     format_multitopic/courseformat/courseindex/section\n * @class      format_multitopic/courseformat/courseindex/section\n * @copyright  2022 James Calder and Otago Polytechnic\n * @copyright  based on work by 2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ComponentBase from 'core_courseformat/local/courseindex/section';\n\nexport default class Component extends ComponentBase {\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n     static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            selectors,\n        });\n    }\n\n    /**\n     * Validate if the drop data can be dropped over the component.\n     *\n     * @param {Object} dropdata the exported drop data.\n     * @returns {boolean}\n     */\n    validateDropData(dropdata) {\n        // We accept any course module.\n        if (dropdata?.type === 'cm') {\n            return true;\n        }\n        // We accept a section that fits\n        if (dropdata?.type === 'section') {\n            const sectionzeroid = this.course.sectionlist[0];\n            const state = this.reactive.stateManager.state;\n            const origin = state.section.get(dropdata.id);\n            let target = this.section;\n            while (target.levelsan > origin.levelsan) {\n                target = state.section.get(this.course.sectionlist[target.number - 1]);\n            }\n            const moveDirection = Math.sign(target.number - origin.number);\n            let targetEnd = target;\n            while (this.course.sectionlist.length > targetEnd.number + 1\n                    && state.section.get(this.course.sectionlist[targetEnd.number + 1]).levelsan > origin.levelsan) {\n                targetEnd = state.section.get(this.course.sectionlist[targetEnd.number + 1]);\n            }\n            return origin.id != target.id && origin.id != sectionzeroid && target.id != sectionzeroid\n                && this.id == (moveDirection > 0 ? targetEnd : target).id;\n        }\n        return false;\n    }\n\n\n    /**\n     * Display the component dropzone.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n     showDropZone(dropdata) {\n        if (dropdata.type == 'cm') {\n            this.getLastCm()?.classList.add(this.classes.DROPDOWN);\n        }\n        if (dropdata.type == 'section') {\n            const state = this.reactive.stateManager.state;\n            const origin = state.section.get(dropdata.id);\n            let target = this.section;\n            while (target.levelsan > origin.levelsan) {\n                target = state.section.get(this.course.sectionlist[target.number - 1]);\n            }\n            const moveDirection = Math.sign(target.number - origin.number);\n            let targetEnd = target;\n            while (this.course.sectionlist.length > targetEnd.number + 1\n                    && state.section.get(this.course.sectionlist[targetEnd.number + 1]).levelsan > origin.levelsan) {\n                targetEnd = state.section.get(this.course.sectionlist[targetEnd.number + 1]);\n            }\n            const targetHTML = document.querySelector(\n                \".courseindex-section[data-id='\" + (moveDirection <= 0 ? target : targetEnd).id + \"']\");\n            // The relative move of section depends on the section number.\n            if (moveDirection > 0) {\n                targetHTML.classList.remove(this.classes.DROPUP);\n                targetHTML.classList.add(this.classes.DROPDOWN);\n            } else {\n                targetHTML.classList.add(this.classes.DROPUP);\n                targetHTML.classList.remove(this.classes.DROPDOWN);\n            }\n        }\n    }\n\n    /**\n     * Hide the component dropzone.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    hideDropZone(dropdata) {\n        const state = this.reactive.stateManager.state;\n        const origin = state.section.get(dropdata.id);\n        let target = this.section;\n        while (target.levelsan > origin.levelsan) {\n            target = state.section.get(this.course.sectionlist[target.number - 1]);\n        }\n        const moveDirection = Math.sign(target.number - origin.number);\n        let targetEnd = target;\n        while (this.course.sectionlist.length > targetEnd.number + 1\n                && state.section.get(this.course.sectionlist[targetEnd.number + 1]).levelsan > origin.levelsan) {\n            targetEnd = state.section.get(this.course.sectionlist[targetEnd.number + 1]);\n        }\n        const targetHTML = document.querySelector(\n            \".courseindex-section[data-id='\" + (moveDirection <= 0 ? target : targetEnd).id + \"']\");\n        targetHTML.classList.remove(this.classes.DROPUP);\n        targetHTML.classList.remove(this.classes.DROPDOWN);\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    drop(dropdata) {\n        // Call the move mutation.\n        if (dropdata.type == 'cm') {\n            this.reactive.dispatch('cmMove', [dropdata.id], this.id);\n        }\n        if (dropdata.type == 'section') {\n            const state = this.reactive.stateManager.state;\n            const origin = state.section.get(dropdata.id);\n            let target = this.section;\n            while (target.levelsan > origin.levelsan) {\n                target = state.section.get(this.course.sectionlist[target.number - 1]);\n            }\n            this.reactive.dispatch('fmtSectionMove', origin, target);\n        }\n    }\n\n}"],"names":["Component","ComponentBase","target","selectors","element","document","getElementById","validateDropData","dropdata","type","sectionzeroid","this","course","sectionlist","state","reactive","stateManager","origin","section","get","id","levelsan","number","moveDirection","Math","sign","targetEnd","length","showDropZone","getLastCm","classList","add","classes","DROPDOWN","targetHTML","querySelector","remove","DROPUP","hideDropZone","drop","dispatch"],"mappings":"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"}